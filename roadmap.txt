Step di semplificazione:


Input utente (documento/paragrafo)
        ↓
Agente principale (es. "professore") legge il testo e fornisce la prima spiegazione → Modalità selezionabile
        ↓
   [L'utente può selezionare una parte non compresa]
        ↓
Attivazione Agente di semplificazione (es. "Semplificatore 1")
        ↓
Nuova spiegazione in un livello più semplice → [Nuova scheda/tab]
        ↓
   [L'utente può continuare a semplificare ancora se serve]
        ↓
Stack di spiegazioni che si possono “navigare” su livelli di profondità (come un breadcrumb)



Sistemi MultiAgente (ruoli e coordinazione)

Agente | Ruolo 
docente -> Fornisce una spiegazione chiara e dettagliata del testo completo
semplificatore -> Semplifica concetti specifici su richiesta dell’utente
Schematizzatore -> Genera spiegazioni schematiche con bullet points
Meta-Coordinatore -> Tiene traccia dello stato di avanzamento e del contesto dell’utente
Controllore della conoscenza -> Analizza il livello di conoscenza dichiarato o dedotto e suggerisce un livello adeguato


Modello architetturale:
Frontend Django
│
├── Home (/)
├── Simplify (/simplify/)
│   └── Interfaccia utente con input testo + scelta modalità (dropdown)
│   └── Output: spiegazione + interfaccia per selezionare sotto-paragrafi
│       └── Pulsante "Simplify this"
│           └── Nuovo livello di agente → Nuova vista/scheda
│
Backend
│
├── AgentManager (coordina gli agenti)
│   ├── UniversityAgent
│   ├── SimplifyAgent
│   ├── SchematicAgent
│   └── ContextTracker (stato sessione utente e profondità)
│
├── LLMInterface
│   └── Adapter per OpenAI, Gemini, o altri LLM provider




Implementazione con sistemi esistenti: 

LangChain con agenti personalizzati: permette di creare flussi multi-agente e ragionamenti a catena.
CrewAI: costruita appositamente per orchestrare agenti specializzati che collaborano su task.
Gemini (Google AI Studio): se supporta multi-agent prompts, potresti usarlo per assegnare ruoli tramite system prompt.
Hugging Face Transformers + Gradio per testing rapido.